apiVersion: v1
kind: ConfigMap
metadata:
  name: springbox-config-server
  labels:
    app: springbox
    component: config-server
data:
  application.yaml: |+
    configserver: true
    bus: true

    spring:
      rabbitmq:
        addresses: rabbitmq:5672

    eureka:
      client:
        serviceUrl:
          defaultZone: http://springbox-eureka:8761/eureka/
      instance:
        preferIpAddress: true
        leaseRenewalIntervalInSeconds: 10
        metadataMap:
          instanceId: ${spring.application.name}:${server.port:8080}

    security:
      oauth2:
        resource:
          userInfoUri: http://springbox-auth-server:9999/uaa/user

  springbox-catalog.yaml: |+
    server:
      port: 8080

    spring:
      jpa:
        hibernate:
          ddl-auto: create-drop
    ---
    spring:
      profiles: default
      jpa:
        database: HSQL
   
    ---
    spring:
      profiles: cloud
      jpa:
        database: POSTGRESQL

  springbox-recommendations.yaml: |+
    server:
      port: 8080
 
    logging:
      logging:
        org.springframework.web: DEBUG
        io.springbox.recommendations: DEBUG
    
    spring:
      data:
        neo4j:
          driver: org.neo4j.ogm.drivers.http.driver.HttpDriver 
          uri: http://neo4j:7474
          username: neo4j
          password: secret
    
  springbox-api-gateway.yaml: |+
    server:
      port: 8080
      context-path: /springbox
 
    zuul:
      routes:
        springbox-catalog: /catalog/**
        springbox-reviews: /reviews/**
        springbox-recommendations: /recommendations/**
        user:
          path: /user/**
          url: http://springbox-auth-server:9999/uaa/user
    
    security:
      user:
        password: password
      oauth2:
        client:
          accessTokenUri: http://springbox-auth-server:9999/uaa/oauth/token
          userAuthorizationUri: https://192.168.0.145/uaa/oauth/authorize
          clientId: acme
          clientSecret: acmesecret
    
    logging:
      level:
        org.springframework.security: DEBUG 
        org.springframework.cloud.netflix: INFO
        com.netflix.zuul: INFO
        io.springbox.apigateway: DEBUG

  springbox-reviews.yaml: |+
    server:
      port: 8080
 
    spring:
      data:
        mongodb:
          uri: mongodb://mongodb:27017/reviews

  springbox-hystrix-dashboard.yaml: |+
    server:
      context-path: /hystrix-dashboard

  springbox-turbine-server.yaml: |+
    turbine:
      aggregator:
        clusterConfig: SPRINGBOX

    InstanceDiscovery:
      impl: com.netflix.turbine.discovery.EurekaInstanceDiscovery.class
